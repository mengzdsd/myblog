<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Mengz You's blogger.]]></title>
  <link href="http://mengzyou.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://mengzyou.github.io/"/>
  <updated>2014-03-28T22:06:19+08:00</updated>
  <id>http://mengzyou.github.io/</id>
  <author>
    <name><![CDATA[Mengz You]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在openSUSE上使用3G数据卡]]></title>
    <link href="http://mengzyou.github.io/blog/2013/01/15/use-data-card-on-opensuse.html"/>
    <updated>2013-01-15T21:33:20+08:00</updated>
    <id>http://mengzyou.github.io/blog/2013/01/15/use-data-card-on-opensuse</id>
    <content type="html"><![CDATA[<p>今天这篇是因为想把怎么成功连上网的过程给记录下来。真应该感谢家里的宽带坏掉了，还有手里正好有一个华为的联通3G数据上网卡，所以就折腾了一下，这都是废话了！</p>

<h3>工具准备</h3>

<p>首先要保证系统里已经安装<a href="http://software.opensuse.org/package/usb_modeswitch">usb_modeswitch</a>和<a href="http://software.opensuse.org/package/wvdial">wvdial</a>这两个包，因为我们要使用这两个命令，一个是用来切换 usb 模式的，一个是用来拨号的。</p>

<!-- more -->


<p></p>

<h3>切换上网卡usb模式</h3>

<p>插入华为的 3g 联通数据上网卡（我这个的型号是 HUAWEI E261），使用如下 lsusb 命令查看信息:</p>

<blockquote><p># lsusb | grep &ldquo;Huawei&rdquo; <br/>
Bus 002 Device 003: ID 12d1:1436 Huawei Technologies Co., Ltd.</p></blockquote>

<p>记录下 ID，也就是 12d1:1436 ，一个厂商号，一个设备号。
然后使用如下命令将切换 usb 模式：</p>

<blockquote><p># usb_modeswitch –default-vendor 0x12d1 –default-product 0×1436 –target-vendor 0x12d1 –target-product 0×1436 –huawei-mode</p>

<p>Looking for target devices … <br/>
found matching product ID <br/>
adding device <br/>
Found devices in target mode or class (1) <br/>
Looking for default devices … <br/>
found matching product ID <br/>
adding device <br/>
Found device in default mode, class or configuration (1) <br/>
Accessing device 003 on bus 002 … <br/>
Getting the current device configuration … <br/>
OK, got current device configuration (1) <br/>
Using first interface: 0×00 <br/>
Using endpoints 0×01 (out) and 0×82 (in) <br/>
Not a storage device, skipping SCSI inquiry</p>

<p>USB description data (for identification) <br/>
————————-
Manufacturer: HUAWEI Technology <br/>
Product: HUAWEI Mobile <br/>
Serial No.: not provided <br/>
————————- <br/>
Sending Huawei control message … <br/>
OK, Huawei control message sent <br/>
&ndash;> Run lsusb to note any changes. Bye.</p></blockquote>

<p>然后，</p>

<blockquote><p># ls /dev/ttyUSB* <br/>
/dev/ttyUSB0 /dev/ttyUSB1 /dev/ttyUSB2</p></blockquote>

<p>已经有了3个 ttyUSB 设备。</p>

<h3>配置wvdial</h3>

<p>运行下面的命令来生成 wvdial 的配置文件：</p>

<blockquote><p># wvdialconf <br/>
Editing `/etc/wvdial.conf’.</p>

<p>Scanning your serial ports for a modem.</p>

<p>Modem Port Scan&lt;*1>: S0 S1 S2 S3 S4 S5 S6 S7 <br/>
ttyUSB0&lt;*1>: ATQ0 V1 E1 — OK <br/>
ttyUSB0&lt;*1>: ATQ0 V1 E1 Z — OK <br/>
ttyUSB0&lt;*1>: ATQ0 V1 E1 S0=0 — OK <br/>
ttyUSB0&lt;*1>: ATQ0 V1 E1 S0=0 &amp;C1 — OK <br/>
ttyUSB0&lt;*1>: ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 — OK <br/>
ttyUSB0&lt;*1>: ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0 — OK <br/>
ttyUSB0&lt;*1>: Modem Identifier: ATI — Manufacturer: huawei <br/>
ttyUSB0&lt;*1>: Speed 9600: AT — OK <br/>
ttyUSB0&lt;*1>: Max speed is 9600; that should be safe. <br/>
ttyUSB0&lt;*1>: ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0 — OK <br/>
ttyUSB1&lt;*1>: ATQ0 V1 E1 — failed with 2400 baud, next try: 9600 baud <br/>
ttyUSB1&lt;*1>: ATQ0 V1 E1 — failed with 9600 baud, next try: 9600 baud <br/>
ttyUSB1&lt;*1>: ATQ0 V1 E1 — and failed too at 115200, giving up. <br/>
ttyUSB2&lt;*1>: ATQ0 V1 E1 — OK <br/>
ttyUSB2&lt;*1>: ATQ0 V1 E1 Z — OK <br/>
ttyUSB2&lt;*1>: ATQ0 V1 E1 S0=0 — OK <br/>
ttyUSB2&lt;*1>: ATQ0 V1 E1 S0=0 &amp;C1 — OK <br/>
ttyUSB2&lt;*1>: ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 — OK <br/>
ttyUSB2&lt;*1>: ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0 — OK <br/>
ttyUSB2&lt;*1>: Modem Identifier: ATI — Manufacturer: huawei <br/>
ttyUSB2&lt;*1>: Speed 9600: AT — OK <br/>
ttyUSB2&lt;*1>: Max speed is 9600; that should be safe. <br/>
ttyUSB2&lt;*1>: ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0 — OK</p>

<p>Found a modem on /dev/ttyUSB0. <br/>
Modem configuration written to /etc/wvdial.conf. <br/>
ttyUSB0: Speed 9600; init “ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0″ <br/>
ttyUSB2: Speed 9600; init “ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0″</p></blockquote>

<p>可以看到，配置文件在<em>/etc/wvdial.conf</em>，然后修改一下该文件，我修改后的文件内容如下:</p>

<blockquote><p># cat /etc/wvdial.conf</p>

<p>[Dialer Defaults] <br/>
Init1 = ATZ <br/>
Init2 = ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0 <br/>
Modem = /dev/ttyUSB0 <br/>
Phone = *99# <br/>
Idle Seconds = 300 <br/>
Modem Type = Analog Modem <br/>
Stupid Mode = 1 <br/>
Compuserve = 0 <br/>
Baud = 9600 <br/>
Auto DNS = 1 <br/>
Dial Command = ATDT <br/>
Ask Password = 0 <br/>
ISDN = 0 <br/>
Password = any <br/>
Username = any</p></blockquote>

<h3>拨号上网</h3>

<p>接下来就直接运行 wvdial 拨号：</p>

<blockquote><p># wvdial <br/>
–> WvDial: Internet dialer version 1.60 <br/>
–> Initializing modem. <br/>
–> Sending: ATZ <br/>
ATZ <br/>
OK <br/>
–> Sending: ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0 <br/>
ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0 <br/>
OK <br/>
–> Modem initialized. <br/>
–> Idle Seconds = 300, disabling automatic reconnect. <br/>
–> Sending: ATDT*99# <br/>
–> Waiting for carrier. <br/>
ATDT*99# <br/>
CONNECT <br/>
–> Carrier detected. Starting PPP immediately. <br/>
–> Starting pppd at Mon Jan 13 23:46:44 2013 <br/>
–> Pid of pppd: 32212 <br/>
–> Using interface ppp0 <br/>
–> pppd: [1e][7f] <br/>
–> pppd: [1e][7f] <br/>
–> pppd: [1e][7f] <br/>
–> pppd: [1e][7f] <br/>
–> pppd: [1e][7f] <br/>
–> local IP address 172.20.197.35 <br/>
–> pppd: [1e][7f] <br/>
–> remote IP address 10.64.64.64 <br/>
–> pppd: [1e][7f] <br/>
–> primary DNS address 202.106.195.68 <br/>
–> pppd: [1e][7f] <br/>
–> secondary DNS address 202.106.46.151 <br/>
–> pppd: [1e][7f] <br/>
–> Script /etc/ppp/ip-up run successful <br/>
–> Default route Ok. <br/>
–> Nameserver (DNS) Ok. <br/>
–> Connected… Press Ctrl-C to disconnect <br/>
–> pppd: [1e][7f]</p></blockquote>

<p>可以看到已经设置了IP地址，和DNS服务器地址，也就是OK啦！！ <br/>
<strong>ifconfig</strong> 一下，可以看到如下的链接信息：</p>

<blockquote><p># ppp0 Link encap:Point-to-Point Protocol <br/>
inet addr:172.20.197.35 P-t-P:10.64.64.64 Mask:255.255.255.255 <br/>
UP POINTOPOINT RUNNING NOARP MULTICAST MTU:1500 Metric:1 <br/>
RX packets:20496 errors:0 dropped:0 overruns:0 frame:0 <br/>
TX packets:18854 errors:0 dropped:0 overruns:0 carrier:0 <br/>
collisions:0 txqueuelen:3 <br/>
RX bytes:14708447 (14.0 Mb) TX bytes:2844560 (2.7 Mb)</p></blockquote>

<p>这样就大功告成啦! <br/>
最后，要感谢下<a href="http://home.cnblogs.com/u/shanlilang/">山里狼</a>的<a href="http://www.cnblogs.com/shanlilang/archive/2012/11/18/2776080.html">openSUSE简单配置</a>这篇文章，我也就是按照其指导弄的，虽然有些配置不太一样!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【翻译】如何在Unix Shell脚本中使用ftp下载文件]]></title>
    <link href="http://mengzyou.github.io/blog/2013/01/15/translate-how-do-I-ftp-in-shell.html"/>
    <updated>2013-01-15T21:33:20+08:00</updated>
    <id>http://mengzyou.github.io/blog/2013/01/15/translate-how-do-I-ftp-in-shell</id>
    <content type="html"><![CDATA[<p>【原文】<a href="http://www.thegeekstuff.com/2010/12/how-do-i-ftp-and-download-files-from-a-unix-shell-script/">How Do I ftp and Download files from a UNIX Shell Script</a></p>

<p>问题：我想在一个shell脚本内执行ftp，在脚本内部就提供用户名和密码来下载文件。你能给我解释下怎么样在shell脚本中执行这个任务吗？ <br/>
答：为了在批量模式下用ftp下载/上传文件，你可以从命令行使用称为“<a href="http://en.wikipedia.org/wiki/Here_document">HERE document</a>”的FTP脚本，或者像下面说的一样在脚本中调用FTP。</p>

<!-- more -->


<p></p>

<h4>使用 “HERE document” 的 FTP 脚本</h4>

<blockquote><p>\$ ftp -in URL &lt;&lt; SCRIPTEND <br/>
user USERNAME PASSWORD <br/>
binary <br/>
cd PATH <br/>
mget PATH <br/>
SCRIPTEND</p></blockquote>

<p>在上面的ftp脚本中： <br/>
*   ftp : ftp命令 <br/>
*   -i : 不用交互式提示 <br/>
*   -n : 不用自动登录 <br/>
*   user USERNAME PASSWORD : 使用提供的用户名和密码登录 <br/>
*   binary : 为二进制文件传输设置模式 <br/>
*   cd PATH : 在远程机器上改变目录 <br/>
*   mget PATH : 获取指定文件 <br/>
*   SCRIPTEND : 指定 “HERE document” 开始和结束的标记“HERE document”用来为命令提供输入，请参考<a href="http://en.wikipedia.org/wiki/Here_document">HERE document</a>。</p>

<h4>在Shell脚本中使用 FTP 脚本</h4>

<p>下面是一个简单的例子用来从FTP服务器下载一个tar文件</p>

<blockquote><p>\$ cat download.sh <br/>
ftp -in mirrors.issp.co.th &lt;&lt; SCRIPTEND <br/>
user anonymous <a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#x6f;&#58;&#116;&#101;&#115;&#x74;&#x40;&#116;&#x65;&#115;&#116;&#46;&#99;&#111;&#109;">&#x74;&#x65;&#x73;&#x74;&#64;&#x74;&#x65;&#x73;&#x74;&#46;&#x63;&#111;&#x6d;</a> <br/>
binary <br/>
cd cpan/authors/id/P/PM/PMQS/ <br/>
mget Compress-Raw-Bzip2-2.027.tar.gz <br/>
SCRIPTEND</p></blockquote>

<p>执行这个脚本来下载文件</p>

<blockquote><p>\$ sh download.sh <br/>
\$ ls
download.sh <br/>
Compress-Raw-Bzip2-2.027.tar.gz</p></blockquote>
]]></content>
  </entry>
  
</feed>
