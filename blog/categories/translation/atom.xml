<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Translation | Mengz You's blogger.]]></title>
  <link href="http://mengzyou.github.io/blog/categories/translation/atom.xml" rel="self"/>
  <link href="http://mengzyou.github.io/"/>
  <updated>2014-05-20T10:03:31+00:00</updated>
  <id>http://mengzyou.github.io/</id>
  <author>
    <name><![CDATA[Mengz You]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[【翻译】简便安全地访问远程文件]]></title>
    <link href="http://mengzyou.github.io/blog/2011/06/30/trans-accessing-remote-files-easily-and-securely.html"/>
    <updated>2011-06-30T05:58:46+00:00</updated>
    <id>http://mengzyou.github.io/blog/2011/06/30/trans-accessing-remote-files-easily-and-securely</id>
    <content type="html"><![CDATA[<p>【原文】<a href="http://www.linuxjournal.com/content/accessing-remote-files-easy-and-secure">Accessing Remote Files Easily and Securely</a></p>

<p>安全shell – <a href="http://en.wikipedia.org/wiki/SSH">ssh</a>以及<a href="http://en.wikipedia.org/wiki/Secure_copy">scp</a>是我每天基本上都会用到的工具。当在多系统上工作时，不设置<a href="http://www.samba.org/">SAMBA</a>或者<a href="http://en.wikipedia.org/wiki/Network_File_System">NFS</a>就能在机器之间移动文件是非常便利的。而你所需要的就是打开安全shell守护进程 – <a href="http://www.openssh.com/">sshd</a> 。</p>

<!-- more -->


<p>在我们进入[sshfs][sshfs_site]的细节之前，让我们来快速看一下ssh 。安全shell守护进程默认运行的端口22上。它使得可以运行一个加密的shell交互。带上-Y选项，你可以运行<a href="http://www.x.org/">X11</a>转发机制，允许你在远程机器上运行X11等图形程序以及在你当前的终端上显示窗口。</p>

<p>你可以通过<em>/etc/ssh/sshd_config</em>(这个位置是在<a href="http://www.ubuntu.com/">ubuntu</a>系统上，不同发行版可能不同）文件来配置 <a href="http://www.openssh.com/">sshd</a>。这里，你可以禁用<em>root</em>访问旧的协议，<a href="http://www.x.org/">X11</a>转发等。一般的见解是，你限制越多的远程访问，你的系统对于潜在的攻击来说就越安全。如果你打算暴露你的<a href="http://www.openssh.com/">sshd</a>到英特网，你可能要调整你的<em>hosts.allow</em>和<em>hosts.deny</em>文件。有很多强化服务器和<a href="http://en.wikipedia.org/wiki/SSH">ssh</a>的指南，这里就不讲细节了。</p>

<p>要使用ssh，你需要安装sshd。在<a href="http://www.ubuntu.com/">Ubuntu</a>系统，也就是<strong>openssh-server</strong>包。为了外部访问，你也需要在路由器/防火墙使用端口22的转发你的<a href="http://www.whatismyip.com/">外部IP</a>。现在你需要使用你的普通用户权限登录到你的机器。</p>

<blockquote><p>$ ssh <a href="&#109;&#97;&#x69;&#108;&#x74;&#111;&#58;&#x75;&#x73;&#101;&#x72;&#64;&#x31;&#57;&#50;&#x2e;&#x31;&#54;&#56;&#x2e;&#49;&#46;&#49;&#x30;&#x30;">&#x75;&#x73;&#x65;&#114;&#x40;&#x31;&#x39;&#x32;&#46;&#x31;&#x36;&#56;&#46;&#49;&#x2e;&#49;&#48;&#x30;</a>   </br>
user@192.168.1.100′s password:</p></blockquote>

<p>输入密码，你就可以完全访问远程系统了。
便捷的安全拷贝命令 – scp，也以同样的方式工作。要拷贝<em>test.txt</em>文件到用户的远程主目录，简单地输入：</p>

<blockquote><p>$ scp test.txt user@192.168.1.100:</p></blockquote>

<p>你将会被提示输入密码。你也可以同样的拷贝远程系统的文件到本地。写明的命令演示了怎么样拷贝一个完全路径的文件到本地机器：</p>

<blockquote><p>$ scp user@192.168.1.100:/var/log/messages remote-message</p></blockquote>

<p>这两个命令意味着你可以自由地在机器之间拷贝文件。而[sshfs][sshfs_site]作为一个可以挂载的文件系统提供了这样的功能。在进入怎样设置sshfs之前，我们来快速看看什么是sshfs。</p>

<p>sshfs是用<a href="http://fuse.sourceforge.net/">FUSE</a>，以及依赖ssh的<a href="http://en.wikipedia.org/wiki/SSH_File_Transfer_Protocol">sftp</a>部分来访问远程机器。作为一个远程文件访问协议，sshfs不是非常好，例如，多用户同时写入同一文件，将造成损坏。而优点是继承了安全性和容易建立。</p>

<p>那么，怎么用呢？让我们来看一个非常简短的示例。</p>

<blockquote><p>$ sshfs user@192.168.1.100: remote-home   </br>
$ ls remote-home   </br>
Desktop  Documents  Downloads  Music  </br>
$ fusermount -u remote-home</p></blockquote>

<p>初始的sshfs命令挂载用户远程的主目录到<em>remote-home</em>。你可以在冒号后指定另一个路径来挂载远程文件系统的任何一个部分。访问仅仅受用户的访问权限限制。</p>

<p>在挂载的文件夹上使用ls或其他原始命令，就像远程主目录被本地挂载一样。所有的工具都工作，例如你可以登录到你的远程机器，使用你本地安装的构建工具构建软件。</p>

<p>要卸载文件系统，使用FUSE工具包中的<strong>fusermount</strong>命令。</p>

<p>总结，sshfs是一个容易建立的远程文件访问工具。如果涉及多个用户，它应该被小心使用。它使得可以易如反掌地临时访问远程文件系统，也方便从虚拟机挂载文件系统来访问和监视，也方便远程安装，编译和调试。总之，是我一直保留在我的工具箱中的工具之一。</p>
]]></content>
  </entry>
  
</feed>
